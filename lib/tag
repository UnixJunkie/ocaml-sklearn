#!/bin/bash
# tagging for release
# - are we on the right branch?
# - have we committed generated .py and .md files?
# - does the tag not exist yet?

set -e
set -x

ROOT=$(realpath $(dirname "$0"))/..
# echo "ROOT from $0 is $ROOT"

source "$ROOT/lib/version.sh"

SKLEARN_OPAM_VERSION="$(egrep '^version' "$ROOT/sklearn.opam")"
if [[ "$SKLEARN_OPAM_VERSION" != "version: \"$OCAML_SKLEARN_FULL_VERSION\"" ]]; then
    echo "The version in $ROOT/sklearn.opam is wrong ($SKLEARN_OPAM_VERSION), set it to $OCAML_SKLEARN_FULL_VERSION"
    exit 1
fi

SCIPY_OPAM_VERSION="$(egrep '^version' "$ROOT/scipy.opam")"
if [[ "$SCIPY_OPAM_VERSION" != "version: \"$OCAML_SCIPY_FULL_VERSION\"" ]]; then
    echo "The version in $ROOT/scipy.opam is wrong ($SCIPY_OPAM_VERSION), set it to $OCAML_SCIPY_FULL_VERSION"
    exit 1
fi

NUMPY_OPAM_VERSION="$(egrep '^version' "$ROOT/np.opam")"
if [[ "$NUMPY_OPAM_VERSION" != "version: \"$OCAML_NUMPY_FULL_VERSION\"" ]]; then
    echo "The version in $ROOT/np.opam is wrong ($NUMPY_OPAM_VERSION), set it to $OCAML_NUMPY_FULL_VERSION"
    exit 1
fi


TAGS="$OCAML_SKLEARN_FULL_VERSION $OCAML_SCIPY_FULL_VERSION $OCAML_NUMPY_FULL_VERSION"
# BRANCH="$SKLEARN_BASIC_VERSION"
BRANCH="$OCAML_SKDOC_VERSION"
echo "Attempting to tag versions $TAGS on branch $BRANCH."

if [[ $(git status -s) ]]; then
    echo "There are some uncommitted changes, finish them:"
    git status -s
    exit 1
fi

rm -rf "$ROOT/skdoc.log" "$ROOT/notebooks/rendered"

UNTRACKED=$(git ls-files --other --directory --exclude-standard)
if [[ "$UNTRACKED" != "" ]]; then
    echo "There are untracked files, do something about it:"
    echo "$UNTRACKED"
    exit 1
fi

# CURRENT_BRANCH="$(git rev-parse --abbrev-ref HEAD)"
# if [[ "$CURRENT_BRANCH" != "$BRANCH" ]]; then
#     echo "Checking out branch $BRANCH"
#     git checkout "$BRANCH"
# fi

if [[ $(git tag -l "$TAG") ]]; then
    echo "Tag $TAG already exists. Maybe bump the version in lib/version.sh?"
    exit 1
fi

INITIAL_BRANCH="$(git rev-parse --abbrev-ref HEAD)"

git checkout master

# Make sure everything builds in master, and generate the generated
# files.
dune build @install @runtest
"$ROOT/lib/build-doc"
"$ROOT/lib/build-notebooks"

git checkout "$BRANCH"

git merge master -m 'merge from master'

for PKG in np scipy sklearn; do
    cp "$ROOT/_build/default/lib/$PKG/"*.{ml,mli} "$ROOT/_build/default/lib/$PKG/skdoc.log" "$ROOT/lib/$PKG/"
    git add "$ROOT/lib/$PKG/"*.{ml,mli} "$ROOT/lib/$PKG/skdoc.log" "$ROOT/$PKG.opam" "$ROOT/examples/notebooks/rendered/"*.ipynb
    git diff-index --quiet HEAD || git commit -m 'add generated files to release branch'
done

for TAG in $TAGS; do
    git tag -a "$TAG" -m "Tag release $TAG."
done

# Come back to where we were.
git checkout "$INITIAL_BRANCH"
