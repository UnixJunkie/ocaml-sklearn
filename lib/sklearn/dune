(library
 (public_name sklearn)
 (libraries bigarray pyml scipy))

;; 58 is due to pyml, not sure what to do about it
;; Warning 58: no cmx file was found in path for module Numpy, and its interface was not compiled with -opaque
(env
 (dev
  (flags (:standard -w -58))))

;; No other way atm to share code between scipy and sklearn using a private
;; library with dune.
;; https://github.com/ocaml/dune/issues/1017
(rule (copy ../common/wrap_utils_common.ml wrap_utils_common.ml))

(rule (targets
       base.ml
       base.mli
       calibration.ml
       calibration.mli
       cluster.ml
       cluster.mli
       compose.ml
       compose.mli
       conftest.ml
       conftest.mli
       covariance.ml
       covariance.mli
       cross_decomposition.ml
       cross_decomposition.mli
       csr_matrix.ml
       csr_matrix.mli
       datasets.ml
       datasets.mli
       decomposition.ml
       decomposition.mli
       discriminant_analysis.ml
       discriminant_analysis.mli
       dummy.ml
       dummy.mli
       ensemble.ml
       ensemble.mli
       exceptions.ml
       exceptions.mli
       experimental.ml
       experimental.mli
       externals.ml
       externals.mli
       feature_extraction.ml
       feature_extraction.mli
       feature_selection.ml
       feature_selection.mli
       gaussian_process.ml
       gaussian_process.mli
       impute.ml
       impute.mli
       inspection.ml
       inspection.mli
       isotonic.ml
       isotonic.mli
       kernel_approximation.ml
       kernel_approximation.mli
       kernel_ridge.ml
       kernel_ridge.mli
       linear_model.ml
       linear_model.mli
       manifold.ml
       manifold.mli
       metrics.ml
       metrics.mli
       mixture.ml
       mixture.mli
       model_selection.ml
       model_selection.mli
       multiclass.ml
       multiclass.mli
       multioutput.ml
       multioutput.mli
       naive_bayes.ml
       naive_bayes.mli
       neighbors.ml
       neighbors.mli
       neural_network.ml
       neural_network.mli
       pipeline.ml
       pipeline.mli
       preprocessing.ml
       preprocessing.mli
       random_projection.ml
       random_projection.mli
       semi_supervised.ml
       semi_supervised.mli
       setup.ml
       setup.mli
       svm.ml
       svm.mli
       tests.ml
       tests.mli
       tree.ml
       tree.mli
       utils.ml
       utils.mli
       wrap_version.ml
       )

      (deps ../version.sh ../skdoc.sh ../skdoc.py)
      (action (run bash ../skdoc.sh build-sklearn))
      (mode fallback))
